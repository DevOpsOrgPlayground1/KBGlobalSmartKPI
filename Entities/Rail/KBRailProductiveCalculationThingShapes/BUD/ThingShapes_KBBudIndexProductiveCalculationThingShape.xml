<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b628"
 majorVersion="9"
 minorVersion="0"
 modelPersistenceProviderPackage="MssqlPersistenceProviderPackage"
 revision="10"
 schemaVersion="1109"
 universal="password">
    <ThingShapes>
        <ThingShape
         className=""
         description=""
         documentationContent=""
         homeMashup=""
         lastModifiedDate="2022-07-15T06:09:58.803Z"
         name="KBBudIndexProductiveCalculationThingShape"
         projectName="KBsmartKPI"
         tags="KBThingWorxAdministrationVocabulary:Administrated">
            <PropertyDefinitions>
                <PropertyDefinition
                 aspect.cacheTime="0.0"
                 aspect.dataChangeType="VALUE"
                 aspect.isLogged="true"
                 aspect.isPersistent="true"
                 aspect.isReadOnly="false"
                 baseType="BOOLEAN"
                 category=""
                 description=""
                 isLocalOnly="false"
                 name="Productive"
                 ordinal="35"></PropertyDefinition>
            </PropertyDefinitions>
            <ServiceDefinitions>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="false"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="CalculatingProductiveState">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="DATETIME"
                         description=""
                         name="ProductionDate"
                         ordinal="2"></FieldDefinition>
                        <FieldDefinition
                         baseType="BOOLEAN"
                         description=""
                         name="Productive"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
            </ServiceDefinitions>
            <EventDefinitions></EventDefinitions>
            <ServiceMappings></ServiceMappings>
            <ServiceImplementations>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="CalculatingProductiveState">
                    <ConfigurationTables>
                        <ConfigurationTable
                         dataShapeName=""
                         description="Script"
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    //Calculating Productive State
                                    var productive_mode = Productive;
                                    if (productive_mode == null) {
                                    	productive_mode = false;
                                    }
                                    var write_status = false;
                                    var status = "";
                                    var substatus = "";
                                    var machinedatavalue = -1;
                                    //0: Production
                                    //1: Planned shut down --> organizational
                                    //2: Machine Shut down --> technical
                                    //3: Speed losses --> speed
                                    
                                    if (productive_mode && !me.Productive) {
                                    	write_status = true;
                                    	status = "KBMaschStatus.1.Productive";
                                    	substatus = "KBMaschStatus.2.Productive.Start";
                                    	machinedatavalue = 0;
                                    } else if (!productive_mode && me.Productive) {
                                    	write_status = true;
                                    	status = "KBMaschStatus.1.OI.AutoSet";
                                    	substatus = "KBMaschStatus.2.OI.AutoSet.Start";
                                    	machinedatavalue = 1;
                                    }
                                    
                                    if (write_status) {
                                    	me.Productive = productive_mode;
                                    
                                    	var params = {
                                    		infoTableName: "InfoTable",
                                    		dataShapeName: "KBLocalStationDataReceiverStateDataShape"
                                    	};
                                    
                                    	// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(KBLocalStationDataReceiverStateDataShape)
                                    	var infoTable = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                    
                                    	// dateValue:DATETIME
                                    	var dateValue = ProductionDate;
                                    	//dateValue.setMilliseconds(0);
                                    
                                    	// KBLocalStationDataReceiverStateDataShape entry object
                                    	var newEntry = new Object();
                                    	newEntry.Line = me.KBLocalLineThing; // STRING - isPrimaryKey = true
                                    	newEntry.Station = me.name; // STRING - isPrimaryKey = true
                                    	newEntry.Type = "Operator Screen"; // STRING - isPrimaryKey = true
                                    	newEntry.Description = "Kepware"; // STRING
                                    	newEntry.Identifier = substatus; // STRING
                                    	newEntry.ShortName = status; // STRING - isPrimaryKey = true
                                    	newEntry.DateTime = dateValue; // DATETIME - isPrimaryKey = true
                                    
                                    	infoTable.AddRow(newEntry);
                                    
                                    	var params = {
                                    		stateInfoTable: infoTable /* INFOTABLE */
                                    	};
                                    
                                    	// result: BOOLEAN
                                    	var result = me.SetState(params);
                                    
                                    
                                    
                                    
                                    
                                    
                                    	var params = {
                                    		infoTableName: "InfoTable",
                                    		dataShapeName: "KBLocalStationDataReceiverMachineDataShape"
                                    	};
                                    
                                    	// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(KBLocalStationDataReceiverMachineDataShape)
                                    	var machinedata = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                    
                                    
                                    	// KBLocalStationDataReceiverMachineDataShape entry object
                                    	var newEntry = new Object();
                                    	newEntry.Line = me.KBLocalLineThing; // STRING - isPrimaryKey = true
                                    	newEntry.Station = me.name; // STRING - isPrimaryKey = true
                                    	newEntry.Type = "MACHINEDATA"; // STRING - isPrimaryKey = true
                                    	newEntry.Description = "0: Production, 1: org. down, 2: tech. down 3: Speed losses"; // STRING
                                    	newEntry.Identifier = undefined; // STRING
                                    	newEntry.Value = machinedatavalue; // STRING
                                    	newEntry.LowerLimit = undefined; // STRING
                                    	newEntry.ShortName = "AutoCalculatedProductiveInfoFromMachine"; // STRING - isPrimaryKey = true
                                    	newEntry.Unit = undefined; // STRING
                                    	newEntry.UpperLimit = undefined; // STRING
                                    	newEntry.DateTime = dateValue; // DATETIME - isPrimaryKey = true
                                    
                                    	machinedata.AddRow(newEntry);
                                    
                                    
                                    
                                    	var params = {
                                    		machineDataInfoTable: machinedata /* INFOTABLE */
                                    	};
                                    
                                    	// result: BOOLEAN
                                    	var result = me.SetMachineData(params);
                                    
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
            </ServiceImplementations>
            <Subscriptions></Subscriptions>
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <InstanceRunTimePermissions></InstanceRunTimePermissions>
        </ThingShape>
    </ThingShapes>
</Entities>
